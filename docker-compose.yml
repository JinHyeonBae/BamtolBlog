version: "3.9"

networks:
  # backend frontend:
  default_bridge:
    ipam:
      driver: default
      config:
        - subnet: 172.26.0.0/16

services:
  nginx:
    extra_hosts:
      - docker.for.mac.host.internal:host-gateway
    container_name: nginx
    build:
      context: .
      dockerfile: docker/nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./front/build:/var/www/html:delegated
      #- ./certbot/cert/conf/live:/etc/letsencrypt/live
      #- ./certbot/www:/var/www/certbot
    depends_on:
      - spring
      - npm
    ports:
      - 81:80
      - 443:443
    networks:
      default_bridge:
        ipv4_address: 172.26.0.13

  certbot:
    image : certbot/certbot
    container_name : certbot
    # volumes: 
    #   - ./certbot/cert/conf/live:/etc/letsencrypt/live    #nginx컨테이너에 certbot컨테이너 연결
    #   - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    command:
      - certonly
      - --expand
      - --email
      - compuet33@gmail.com
      - --non-interactive
      - --agree-tos
      - --standalone
      - --preferred-challenges
      - http-01
      - --http-01-port
      - '8080'
      - -d
      - 'bamb.shop'

  spring:
    container_name: spring
    build:
      context: .
      dockerfile: docker/spring.dockerfile
    platform: linux/amd64
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://125.134.138.184:3306/blog?useSSL=false&serverTimezone=Asia/Seoul&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: bamtol
      SPRING_DATASOURCE_PASSWORD: Bamtol1234!
    volumes:
      - ./backend/spring:/app:delegated
    networks:
      default_bridge:
        ipv4_address: 172.26.0.3

  npm:
    container_name: node
    build:
      context: .
      dockerfile: docker/npm.dockerfile
    volumes:
      - ./front:/app
      - ./front/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      default_bridge:
        ipv4_address: 172.26.0.2

# docker run --interactive --tty --entrypoint /bin/sh nginx:latest